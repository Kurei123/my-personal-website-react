name: Deploying to Production (Google Cloud Platform VM)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - development
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master')
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Setting up NodeJS Environment
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install project dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Deploy to Google Cloud Platform VM (Production)
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        VM_USERNAME: ${{ secrets.VM_USERNAME }}
        VM_IP: ${{ secrets.VM_IP }}
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        
        ssh -i key.pem -o StrictHostKeyChecking=no $VM_USERNAME@$VM_IP << EOF
          sudo rm -rf /var/www/website-portfolio
          sudo mkdir -p /var/www/website-portfolio
          sudo chown -R $VM_USERNAME:$VM_USERNAME /var/www/website-portfolio
        EOF

        rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" --delete .next/ $VM_USERNAME@$VM_IP:/var/www/website-portfolio/.next/
        rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" --delete public/ $VM_USERNAME@$VM_IP:/var/www/website-portfolio/public/
        rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" deploy/nginx.conf $VM_USERNAME@$VM_IP:/tmp/nginx.conf
        
        ssh -i key.pem -o StrictHostKeyChecking=no $VM_USERNAME@$VM_IP << EOF
          sudo mv /tmp/nginx.conf /etc/nginx/sites-available/default
          sudo nginx -t
          sudo systemctl reload nginx
          
          # Move to the project directory
          cd /var/www/website-portfolio

          # Install dependencies
          npm install

          # Ensure PM2 is installed
          sudo npm install -g pm2 || true

          # Delete existing PM2 process if it exists
          pm2 delete website-portfolio || true

          # Start the Next.js application with PM2
          pm2 start npm --name "website-portfolio" -- start

          # Save the PM2 process list
          pm2 save
        EOF
      shell: bash
